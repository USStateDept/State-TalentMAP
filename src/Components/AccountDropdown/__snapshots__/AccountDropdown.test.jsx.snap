// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountDropdown matches snapshot 1`] = `
<Dropdown
  className="account-dropdown"
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  removeElement={true}
>
  <DropdownTrigger
    className=""
    href="/#"
  >
    <Avatar
      className="account-dropdown--avatar"
      colorString=""
      displayName="John Doe"
      externalSource={Object {}}
      externalSourceToUse="s"
      fallback={
        <FontAwesome
          name="user-o"
        />
      }
      firstName="John"
      initials=""
      lastName="Doe"
      onClick={[Function]}
      small={false}
      useExternalImg={false}
    />
  </DropdownTrigger>
  <div
    className="dropdown-content-outer-container"
  >
    <DropdownContent
      className=""
      onMouseEnter={[Function]}
    >
      <div
        className="account-dropdown--identity account-dropdown--segment"
      >
        <div>
          Signed in as
        </div>
        <strong>
          John Doe
        </strong>
      </div>
      <Link
        className="account-dropdown--identity account-dropdown--segment account-dropdown-link"
        onClick={[Function]}
        replace={false}
        to="/profile/dashboard"
      >
        Dashboard
      </Link>
      <Connect(DarkModeToggle)
        className="unstyled-button account-dropdown--identity account-dropdown--segment account-dropdown-link account-dropdown-link--button"
      />
      <Link
        className="account-dropdown--identity account-dropdown--segment account-dropdown-link"
        onClick={[Function]}
        replace={false}
        to="/logout"
      >
        Logout
      </Link>
    </DropdownContent>
  </div>
</Dropdown>
`;

exports[`AccountDropdown matches snapshot when shouldDisplayName is true 1`] = `
<Dropdown
  className="account-dropdown"
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  removeElement={true}
>
  <DropdownTrigger
    className=""
    href="/#"
  >
    <Avatar
      className="account-dropdown--avatar"
      colorString=""
      displayName="John Doe"
      externalSource={Object {}}
      externalSourceToUse="s"
      fallback={
        <FontAwesome
          name="user-o"
        />
      }
      firstName="John"
      initials=""
      lastName="Doe"
      onClick={[Function]}
      small={false}
      useExternalImg={false}
    />
    <span
      className="account-dropdown--name"
      id="account-username"
    >
      John Doe
    </span>
  </DropdownTrigger>
  <div
    className="dropdown-content-outer-container"
  >
    <DropdownContent
      className=""
      onMouseEnter={[Function]}
    >
      <div
        className="account-dropdown--identity account-dropdown--segment"
      >
        <div>
          Signed in as
        </div>
        <strong>
          John Doe
        </strong>
      </div>
      <Link
        className="account-dropdown--identity account-dropdown--segment account-dropdown-link"
        onClick={[Function]}
        replace={false}
        to="/profile/dashboard"
      >
        Dashboard
      </Link>
      <Connect(DarkModeToggle)
        className="unstyled-button account-dropdown--identity account-dropdown--segment account-dropdown-link account-dropdown-link--button"
      />
      <Link
        className="account-dropdown--identity account-dropdown--segment account-dropdown-link"
        onClick={[Function]}
        replace={false}
        to="/logout"
      >
        Logout
      </Link>
    </DropdownContent>
  </div>
</Dropdown>
`;
