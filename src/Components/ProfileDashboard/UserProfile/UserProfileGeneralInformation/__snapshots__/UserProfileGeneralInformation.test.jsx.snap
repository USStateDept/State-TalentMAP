// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserProfileGeneralInformationComponent matches snapshot 1`] = `
<div
  className="current-user-top current-user-section-border current-user-section-container"
>
  <div
    className="section-padded-inner-container"
  >
    <div
      className="avatar-group"
    >
      <Avatar
        className="dashboard-user-profile-picture"
        colorString=""
        displayName="John"
        externalSource={Object {}}
        externalSourceToUse="m"
        fallback={
          <FontAwesome
            name="user-o"
          />
        }
        firstName="John"
        initials="JD"
        lastName="Doe"
        onClick={[Function]}
        small={false}
        useExternalImg={false}
      />
    </div>
    <Connect(StaticDevContent)>
      <EditProfile />
    </Connect(StaticDevContent)>
    <div
      className="name-group"
    >
      <PositionInformation
        className="current-user-name"
        icon=""
        small={true}
        title="Doe, John"
      />
      <InformationDataPoint
        className=""
        content={
          <InteractiveElement
            className=""
            onClick={[Function]}
            title="Download Employee Profile PDF"
            type="a"
          >
            Employee Profile
          </InteractiveElement>
        }
        sideBySide={false}
        title=""
        titleOnBottom={false}
      />
      <InformationDataPoint
        className="skill-code-data-point-container skill-code-data-point-container-gen-spec"
        content="Grade: 00"
        sideBySide={false}
        title=""
        titleOnBottom={false}
      />
      <InformationDataPoint
        className="skill-code-data-point-container skill-code-data-point-container-skill"
        content={
          <SkillCodeList
            skillCodes={
              Array [
                Object {
                  "code": "6218",
                  "description": "CONSTRUCTION ENGINEERING",
                },
                Object {
                  "code": "6211",
                  "description": "COMPUTER SCIENCE",
                },
              ]
            }
          />
        }
        sideBySide={false}
        title=""
        titleOnBottom={false}
      />
    </div>
  </div>
</div>
`;

exports[`UserProfileGeneralInformationComponent matches snapshot when showEditLink is true 1`] = `
<div
  className="current-user-top current-user-section-border current-user-section-container"
>
  <div
    className="section-padded-inner-container"
  >
    <div
      className="avatar-group"
    >
      <Avatar
        className="dashboard-user-profile-picture"
        colorString=""
        displayName="John"
        externalSource={Object {}}
        externalSourceToUse="m"
        fallback={
          <FontAwesome
            name="user-o"
          />
        }
        firstName="John"
        initials="JD"
        lastName="Doe"
        onClick={[Function]}
        small={false}
        useExternalImg={false}
      />
    </div>
    <Connect(StaticDevContent)>
      <EditProfile />
    </Connect(StaticDevContent)>
    <div
      className="name-group"
    >
      <PositionInformation
        className="current-user-name"
        icon=""
        small={true}
        title="Doe, John"
      />
      <InformationDataPoint
        className=""
        content={
          <InteractiveElement
            className=""
            onClick={[Function]}
            title="Download Employee Profile PDF"
            type="a"
          >
            Employee Profile
          </InteractiveElement>
        }
        sideBySide={false}
        title=""
        titleOnBottom={false}
      />
      <InformationDataPoint
        className="skill-code-data-point-container skill-code-data-point-container-gen-spec"
        content="Grade: 00"
        sideBySide={false}
        title=""
        titleOnBottom={false}
      />
      <InformationDataPoint
        className="skill-code-data-point-container skill-code-data-point-container-skill"
        content={
          <SkillCodeList
            skillCodes={
              Array [
                Object {
                  "code": "6218",
                  "description": "CONSTRUCTION ENGINEERING",
                },
                Object {
                  "code": "6211",
                  "description": "COMPUTER SCIENCE",
                },
              ]
            }
          />
        }
        sideBySide={false}
        title=""
        titleOnBottom={false}
      />
    </div>
  </div>
</div>
`;

exports[`UserProfileGeneralInformationComponent matches snapshot when useGroup is true 1`] = `
<div
  className="current-user-top current-user-section-border current-user-section-container"
>
  <div
    className="section-padded-inner-container"
  >
    <div
      className="avatar-group"
    >
      <Avatar
        className="dashboard-user-profile-picture"
        colorString=""
        displayName="John"
        externalSource={Object {}}
        externalSourceToUse="m"
        fallback={
          <FontAwesome
            name="user-o"
          />
        }
        firstName="John"
        initials="JD"
        lastName="Doe"
        onClick={[Function]}
        small={false}
        useExternalImg={false}
      />
    </div>
    <Connect(StaticDevContent)>
      <EditProfile />
    </Connect(StaticDevContent)>
    <div
      className="name-group"
    >
      <PositionInformation
        className="current-user-name"
        icon=""
        small={true}
        title="Doe, John"
      />
      <InformationDataPoint
        className=""
        content={
          <InteractiveElement
            className=""
            onClick={[Function]}
            title="Download Employee Profile PDF"
            type="a"
          >
            Employee Profile
          </InteractiveElement>
        }
        sideBySide={false}
        title=""
        titleOnBottom={false}
      />
      <InformationDataPoint
        className="skill-code-data-point-container skill-code-data-point-container-gen-spec"
        content="Grade: 00"
        sideBySide={false}
        title=""
        titleOnBottom={false}
      />
    </div>
  </div>
</div>
`;
